#find second largest
l=[3,2,6,4,1,5,7]
max1=0
for i in l:
    if i>max1:
        max1=i
max2=0
for i in l:
    if i>max2 and i!=max1:
        max2=i
print(max2)

#bubblesort
arr=[64,34,25,12,22,11,90]
n=len(arr)
for i in range(n):
    for j in range(0,n-i-1):
        if arr[j]>arr[j+1]:
            arr[j],arr[j+1]=arr[j+1],arr[j]
print(arr)

#insertionsort
arr=[12,11,13,5,6]
for i in range(1,len(arr)):
    k=arr[i]
    j=i-1
    while j>=0 and arr[j]>k:
        arr[j+1]=arr[j]
        j-=1
        arr[j+1]=k
print(arr)

#selectionsort:
arr=[64,25,12,22,11]
n=len(arr)
for i in range(n):
    min=i
    for j in range(i+1,n):
        if arr[j]<arr[min]:
            min=j
        arr[i],arr[min]=arr[min],arr[i]
print(arr)

#find largest
l=[3,2,6,4,1,5,7]
max1=0
for i in l:
    if i>max1:
        max1=i
print(max1)

#matrix no.s:
m=[[1,0,0,1],
   [1,1,0,0],
   [0,1,0,1]]
a=[4,3,2,6]
for i in range(len(m)):
    sum=0
    for j in range(len(m[0])):
        if m[i][j]==1:
            sum+=a[j]
    print(sum)
    
#prime no.
def prime(x):
    for i in x:
        for j in range(2,int(i**0.5)+1):
            if i%j==0:
                break
            return i
    return None
l=[[20,12,11],[10,5,22],[16,7,30]]
b=[]
n=len(l)
for i in l:
    b.append(prime(i))
for i in range(n):
    for j in range(0,n-i-1):
        if b[j]>b[j+1]:
            b[j],b[j+1]=b[j+1],b[j]
            l[j],l[j+1]=l[j+1],l[j]
print(l)